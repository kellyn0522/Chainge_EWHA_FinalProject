{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uAC00\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\FinalProject\\\\moon2\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useCallback, useEffect, useState } from \"react\";\nimport { baseUrl, postRequest } from \"../utils/services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [registerError, setRegisterError] = useState(null);\n  const [isRegisterLoading, setIsRegisterLoading] = useState(false);\n  const [registerInfo, setRegisterInfo] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [loginError, setLoginError] = useState(null);\n  const [isLoginLoading, setIsLoginLoading] = useState(false);\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isFindID, setIsFindID] = useState(false);\n  console.log(\"registerInfo\", registerInfo);\n  console.log(\"Userr\", user);\n  console.log(\"loginInfo\", loginInfo);\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    setUser(JSON.parse(storedUser));\n  }, []);\n  const updateRegisterInfo = useCallback(info => {\n    setRegisterInfo(info);\n  }, []);\n  const updateLoginInfo = useCallback(info => {\n    setLoginInfo(info);\n  }, []);\n  const registerUser = useCallback(async e => {\n    e.preventDefault();\n    setIsRegisterLoading(true);\n    setRegisterError(null);\n    const response = await postRequest(`${baseUrl}/users/register`, JSON.stringify(registerInfo));\n    setIsRegisterLoading(false);\n    if (response.error) {\n      return setRegisterError(response);\n    }\n    localStorage.setItem(\"user\", JSON.stringify(response));\n    setUser(response);\n  }, [registerInfo]);\n  const loginUser = useCallback(async e => {\n    e.preventDefault();\n    setIsLoginLoading(true);\n    setLoginError(null);\n    const response = await postRequest(`${baseUrl}/users/login`, JSON.stringify(loginInfo));\n    setIsLoginLoading(false);\n    if (response.error) {\n      return setLoginError(response);\n    }\n    localStorage.setItem(\"user\", JSON.stringify(response));\n    setUser(response);\n  }, [loginInfo]);\n  const logoutUser = useCallback(() => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      registerInfo,\n      updateRegisterInfo,\n      registerUser,\n      registerError,\n      isRegisterLoading,\n      logoutUser,\n      loginUser,\n      loginError,\n      loginInfo,\n      updateLoginInfo,\n      isLoginLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }, this);\n};\n_s(AuthContextProvider, \"kzOAgURaQWark487wMv9M5f0aIQ=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useEffect","useState","baseUrl","postRequest","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","user","setUser","registerError","setRegisterError","isRegisterLoading","setIsRegisterLoading","registerInfo","setRegisterInfo","name","email","password","loginError","setLoginError","isLoginLoading","setIsLoginLoading","loginInfo","setLoginInfo","isFindID","setIsFindID","console","log","storedUser","localStorage","getItem","JSON","parse","updateRegisterInfo","info","updateLoginInfo","registerUser","e","preventDefault","response","stringify","error","setItem","loginUser","logoutUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/이가은/OneDrive/문서/GitHub/FinalProject/moon2/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from \"react\";\r\nimport { baseUrl, postRequest } from \"../utils/services\";\r\n\r\nexport const AuthContext = createContext();\r\nexport const AuthContextProvider = ({ children }) => {\r\n\r\n    const [user, setUser] = useState(\"\");\r\n    const [registerError, setRegisterError] = useState(null);\r\n    const [isRegisterLoading, setIsRegisterLoading] = useState(false);\r\n    const [registerInfo, setRegisterInfo] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [loginError, setLoginError] = useState(null);\r\n    const [isLoginLoading, setIsLoginLoading] = useState(false);\r\n    const [loginInfo, setLoginInfo] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [isFindID, setIsFindID] = useState(false);\r\n\r\n    console.log(\"registerInfo\", registerInfo);\r\n    console.log(\"Userr\", user);\r\n    console.log(\"loginInfo\", loginInfo);\r\n\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem(\"user\");\r\n        setUser(JSON.parse(storedUser));\r\n    }, []);\r\n\r\n    const updateRegisterInfo = useCallback((info) => {\r\n        setRegisterInfo(info);\r\n    }, []);\r\n\r\n    const updateLoginInfo = useCallback((info) => {\r\n        setLoginInfo(info);\r\n    }, []);\r\n\r\n\r\n    const registerUser = useCallback(async(e) => {\r\n        e.preventDefault();\r\n        setIsRegisterLoading(true);\r\n        setRegisterError(null);\r\n\r\n        const response = await postRequest(\r\n            `${baseUrl}/users/register`,\r\n            JSON.stringify(registerInfo));\r\n\r\n        setIsRegisterLoading(false);\r\n\r\n        if (response.error) {\r\n            return setRegisterError(response);\r\n        }\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(response));\r\n\r\n        setUser(response);\r\n    }, [registerInfo]);\r\n\r\n    const loginUser = useCallback(async (e) => {\r\n        e.preventDefault();\r\n\r\n        setIsLoginLoading(true);\r\n        setLoginError(null);\r\n        \r\n\r\n        const response = await postRequest(\r\n            `${baseUrl}/users/login`,\r\n            JSON.stringify(loginInfo));\r\n\r\n        setIsLoginLoading(false);\r\n\r\n        if (response.error) {\r\n            return setLoginError(response);\r\n        }\r\n        localStorage.setItem(\"user\", JSON.stringify(response));\r\n        setUser(response);\r\n\r\n    }, [loginInfo]);\r\n\r\n    const logoutUser = useCallback(() => {\r\n        localStorage.removeItem(\"user\");\r\n        setUser(null);\r\n    }, []);\r\n\r\n\r\n    return (<AuthContext.Provider\r\n        value={{\r\n            user,\r\n            registerInfo,\r\n            updateRegisterInfo,\r\n            registerUser,\r\n            registerError,\r\n            isRegisterLoading,\r\n            logoutUser,\r\n            loginUser,\r\n            loginError,\r\n            loginInfo,\r\n            updateLoginInfo,\r\n            isLoginLoading,\r\n        }}\r\n    >\r\n        {children}\r\n    </AuthContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}