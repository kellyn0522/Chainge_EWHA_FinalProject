{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uAC00\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\FinalProject\\\\moon2\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport UserInput from \"../component/UserInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useRef, useState, useContext } from \"react\";\n// import \"./Login.css\";\nimport { isLoginContext, userDataContext, setLoginContext } from \"../App\";\nimport Logo from \"../component/Logo\";\nimport { Alert, Button, Form, Row, Col, Stack } from \"react-bootstrap\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const inputContext = /*#__PURE__*/React.createContext();\nexport const inputRefContext = /*#__PURE__*/React.createContext();\n\n/*\r\nconst Login = () => { // 로그인\r\n    const [inputID, setID] = useState(\"\"); // 입력받은 아이디를 저장하는 변수\r\n    const [inputPW, setPW] = useState(\"\"); // 입력받은 비밀번호를 저장하는 변수\r\n    const navigate = useNavigate();\r\n    const userData = useContext(userDataContext); // 저장된 user data\r\n    const isLogin = useContext(isLoginContext);\r\n    const {setIsLogin} = useContext(setLoginContext); // 로그인으로 상태 변경하는 함수\r\n    const inputIDRef = useRef();\r\n    const inputPWRef = useRef();\r\n    let pw = null; // 사용자 정보를 저장할 변수\r\n\r\n    const onClickFindID = () => { // 아이디 찾기 버튼을 누른 경우\r\n        navigate(\"/findId\"); // Find ID 페이지로 이동\r\n    }\r\n\r\n    const onClickFindPW = () => { // 비밀번호 찾기 버튼을 누른 경우\r\n        navigate(\"/findPW\"); // Find Passwoed 페이지로 이동\r\n    }\r\n\r\n    function onClickButton() { // 로그인 버튼을 누른 경우 실행\r\n        if (!inputID) { inputIDRef.current.focus(); return; // 입력이 없으면 하이라이트\r\n        } else if (!inputPW) {inputPWRef.current.focus(); return;\r\n        } else{\r\n        pw = userData.find((item) => String(item.id) === String(inputID)); // 입력받은 ID를 가진 사용자의 저장된 정보\r\n        if(String(inputPW) === String(pw.passWord)){ // 저장된 비밀번호와 입력받은 비밀번호가 같은 경우\r\n            alert(\"로그인 되었습니다.\");\r\n            setIsLogin(pw.keyId); // 로그인 상태로 변경\r\n            navigate(\"/\"); // 홈으로 이동\r\n            } else{ // 저장된 비밀번호와 입력받은 비밀번호가 같지 않은 경우\r\n            alert(\"아이디/비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <inputContext.Provider value={{inputID, inputPW, setID, setPW}}>\r\n            <inputRefContext.Provider value={{inputIDRef, inputPWRef}}>\r\n                <div className = \"Login\">\r\n                    <div className = \"logo\"><Logo /></div>\r\n                    <div className = \"Title\">로그인</div>\r\n                    <div className = \"LoginWrapper\">\r\n                        <UserInput onClickButton = {onClickButton} />\r\n                        <button className = \"button\" onClick = {onClickButton}>Log In</button>\r\n                    </div>\r\n                    <div className = \"Find\">\r\n                        <button className = \"FindID\" onClick = {onClickFindID}>Find ID</button>\r\n                        <button className = \"FindPW\" onClick = {onClickFindPW}>Find PassWord</button>\r\n                    </div>\r\n                </div>\r\n            </inputRefContext.Provider>\r\n        </inputContext.Provider>\r\n    );\r\n};\r\n*/\n\nconst Login = () => {\n  _s();\n  const {\n    loginUser,\n    loginError,\n    loginInfo,\n    updateLoginInfo,\n    isLoginLoading\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: loginUser,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: \"100vh\",\n          justifyContent: \"Center\",\n          paddingTop: \"10%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            gap: 3,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Email\",\n              onChange: e => updateLoginInfo({\n                ...loginInfo,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: e => updateLoginInfo({\n                ...loginInfo,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: isLoginLoading ? \"Getting you in ... \" : \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), (loginError === null || loginError === void 0 ? void 0 : loginError.error) && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: loginError === null || loginError === void 0 ? void 0 : loginError.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"ix0zacNnPyXMj/+3s+Ey6rwt/nk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["UserInput","useNavigate","React","useRef","useState","useContext","isLoginContext","userDataContext","setLoginContext","Logo","Alert","Button","Form","Row","Col","Stack","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","inputContext","createContext","inputRefContext","Login","_s","loginUser","loginError","loginInfo","updateLoginInfo","isLoginLoading","children","onSubmit","style","height","justifyContent","paddingTop","xs","gap","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","e","email","target","value","password","variant","error","message","_c","$RefreshReg$"],"sources":["C:/Users/이가은/OneDrive/문서/GitHub/FinalProject/moon2/src/pages/Login.js"],"sourcesContent":["import UserInput from \"../component/UserInput\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport React, {useRef, useState, useContext} from \"react\";\r\n// import \"./Login.css\";\r\nimport {isLoginContext, userDataContext, setLoginContext} from \"../App\";\r\nimport Logo from \"../component/Logo\";\r\nimport { Alert, Button, Form, Row, Col, Stack } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const inputContext = React.createContext();\r\nexport const inputRefContext = React.createContext();\r\n\r\n/*\r\nconst Login = () => { // 로그인\r\n    const [inputID, setID] = useState(\"\"); // 입력받은 아이디를 저장하는 변수\r\n    const [inputPW, setPW] = useState(\"\"); // 입력받은 비밀번호를 저장하는 변수\r\n    const navigate = useNavigate();\r\n    const userData = useContext(userDataContext); // 저장된 user data\r\n    const isLogin = useContext(isLoginContext);\r\n    const {setIsLogin} = useContext(setLoginContext); // 로그인으로 상태 변경하는 함수\r\n    const inputIDRef = useRef();\r\n    const inputPWRef = useRef();\r\n    let pw = null; // 사용자 정보를 저장할 변수\r\n\r\n    const onClickFindID = () => { // 아이디 찾기 버튼을 누른 경우\r\n        navigate(\"/findId\"); // Find ID 페이지로 이동\r\n    }\r\n\r\n    const onClickFindPW = () => { // 비밀번호 찾기 버튼을 누른 경우\r\n        navigate(\"/findPW\"); // Find Passwoed 페이지로 이동\r\n    }\r\n\r\n    function onClickButton() { // 로그인 버튼을 누른 경우 실행\r\n        if (!inputID) { inputIDRef.current.focus(); return; // 입력이 없으면 하이라이트\r\n        } else if (!inputPW) {inputPWRef.current.focus(); return;\r\n        } else{\r\n        pw = userData.find((item) => String(item.id) === String(inputID)); // 입력받은 ID를 가진 사용자의 저장된 정보\r\n        if(String(inputPW) === String(pw.passWord)){ // 저장된 비밀번호와 입력받은 비밀번호가 같은 경우\r\n            alert(\"로그인 되었습니다.\");\r\n            setIsLogin(pw.keyId); // 로그인 상태로 변경\r\n            navigate(\"/\"); // 홈으로 이동\r\n            } else{ // 저장된 비밀번호와 입력받은 비밀번호가 같지 않은 경우\r\n            alert(\"아이디/비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <inputContext.Provider value={{inputID, inputPW, setID, setPW}}>\r\n            <inputRefContext.Provider value={{inputIDRef, inputPWRef}}>\r\n                <div className = \"Login\">\r\n                    <div className = \"logo\"><Logo /></div>\r\n                    <div className = \"Title\">로그인</div>\r\n                    <div className = \"LoginWrapper\">\r\n                        <UserInput onClickButton = {onClickButton} />\r\n                        <button className = \"button\" onClick = {onClickButton}>Log In</button>\r\n                    </div>\r\n                    <div className = \"Find\">\r\n                        <button className = \"FindID\" onClick = {onClickFindID}>Find ID</button>\r\n                        <button className = \"FindPW\" onClick = {onClickFindPW}>Find PassWord</button>\r\n                    </div>\r\n                </div>\r\n            </inputRefContext.Provider>\r\n        </inputContext.Provider>\r\n    );\r\n};\r\n*/\r\n\r\nconst Login = () => {\r\n    const {\r\n        loginUser,\r\n        loginError,\r\n        loginInfo,\r\n        updateLoginInfo,\r\n        isLoginLoading,\r\n    } = useContext(AuthContext);\r\n\r\n    return (<>\r\n        <Form onSubmit ={loginUser}>\r\n            <Row style={{\r\n                height: \"100vh\",\r\n                justifyContent: \"Center\",\r\n                paddingTop: \"10%\"\r\n            }}>\r\n                <Col xs={6}>\r\n                    <Stack gap={3}>\r\n                        <h2>Login</h2>\r\n\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" onChange={(e) => updateLoginInfo\r\n                            ({ ...loginInfo, email: e.target.value })} />\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => updateLoginInfo\r\n                            ({ ...loginInfo, password: e.target.value })}/>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" >\r\n                            {isLoginLoading? \"Getting you in ... \" : \"Login\"}\r\n                        </Button>\r\n                        {loginError?.error && \r\n                        <Alert variant=\"danger\">\r\n                            <p>{loginError?.message}</p></Alert>} \r\n                    </Stack>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    </>);\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}