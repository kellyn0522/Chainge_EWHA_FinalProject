{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uAC00\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\FinalProject\\\\moon2\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport UserInput from \"../component/UserInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useRef, useState, useContext } from \"react\";\n// import \"./Login.css\";\nimport { userDataContext, setLoginContext, isLoginContext } from \"../App\";\n// import Logo from \"../component/Logo\";\n\nimport { Alert, Button, Form, Row, Col, Stack } from \"react-bootstrap\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const inputContext = /*#__PURE__*/React.createContext();\nexport const inputRefContext = /*#__PURE__*/React.createContext();\nconst Login = () => {\n  _s();\n  const {\n    updateLoginInfo,\n    loginInfo,\n    isLoginLoading,\n    loginError,\n    isFindID\n  } = useContext(AuthContext);\n\n  /*\r\n  const [inputID, setID] = useState(\"\");\r\n  const [inputPW, setPW] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const userData = useContext(userDataContext);\r\n  // const isLogin = useContext(isLoginContext);\r\n  const {setIsLogin} = useContext(setLoginContext);\r\n  const inputIDRef = useRef();\r\n  const inputPWRef = useRef();\r\n  let pw = null;\r\n    const onClickFindID = () => {\r\n      navigate(\"/findId\");\r\n  }\r\n    const onClickFindPW = () => {\r\n      navigate(\"/findPW\");\r\n  }\r\n    function onClickButton() {\r\n      if (!inputID) { inputIDRef.current.focus(); return;\r\n      } else if (!inputPW) {inputPWRef.current.focus(); return;\r\n      } else{\r\n      pw = userData.find((item) => String(item.id) === String(inputID));\r\n      if(String(inputPW) === String(pw.passWord)){\r\n          alert(\"로그인 되었습니다.\");\r\n          setIsLogin(pw.keyId);\r\n          navigate(\"/\");\r\n          } else{\r\n          alert(\"아이디/비밀번호가 일치하지 않습니다.\");\r\n          return;\r\n          }\r\n      }   \r\n  }\r\n  */\n\n  return (\n    /*#__PURE__*/\n    // <inputContext.Provider value={{inputID, inputPW, setID, setPW}}>\n    // <inputRefContext.Provider value={{inputIDRef, inputPWRef}}>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: AuthContext.loginUser,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            height: \"100vh\",\n            justifyContent: \"Center\",\n            paddingTop: \"10%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              gap: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"email\",\n                onChange: e => updateLoginInfo({\n                  ...loginInfo,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"password\",\n                onChange: e => updateLoginInfo({\n                  ...loginInfo,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: isLoginLoading ? \"Getting you in ... \" : \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: isFindID ? \"... \" : \"Find ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), (loginError === null || loginError === void 0 ? void 0 : loginError.error) && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: loginError === null || loginError === void 0 ? void 0 : loginError.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n    // </inputRefContext.Provider>\n    // </inputContext.Provider>\n  );\n};\n_s(Login, \"xiU5XtHzIWcXJDnD+jPtCtFZFk8=\");\n_c = Login;\nexport default Login;\nconsole.log(AuthContext);\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["UserInput","useNavigate","React","useRef","useState","useContext","userDataContext","setLoginContext","isLoginContext","Alert","Button","Form","Row","Col","Stack","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","inputContext","createContext","inputRefContext","Login","_s","updateLoginInfo","loginInfo","isLoginLoading","loginError","isFindID","children","onSubmit","loginUser","style","height","justifyContent","paddingTop","xs","gap","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","e","email","target","value","password","variant","error","message","_c","console","log","$RefreshReg$"],"sources":["C:/Users/이가은/OneDrive/문서/GitHub/FinalProject/moon2/src/pages/Login.js"],"sourcesContent":["import UserInput from \"../component/UserInput\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport React, {useRef, useState, useContext} from \"react\";\r\n// import \"./Login.css\";\r\nimport {userDataContext, setLoginContext, isLoginContext} from \"../App\";\r\n// import Logo from \"../component/Logo\";\r\n\r\nimport { Alert, Button, Form, Row, Col, Stack } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const inputContext = React.createContext();\r\nexport const inputRefContext = React.createContext();\r\n\r\nconst Login = () => {\r\n\r\n    const {updateLoginInfo, loginInfo, isLoginLoading, loginError, isFindID} = useContext(AuthContext);\r\n\r\n    /*\r\n    const [inputID, setID] = useState(\"\");\r\n    const [inputPW, setPW] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const userData = useContext(userDataContext);\r\n    // const isLogin = useContext(isLoginContext);\r\n    const {setIsLogin} = useContext(setLoginContext);\r\n    const inputIDRef = useRef();\r\n    const inputPWRef = useRef();\r\n    let pw = null;\r\n\r\n    const onClickFindID = () => {\r\n        navigate(\"/findId\");\r\n    }\r\n\r\n    const onClickFindPW = () => {\r\n        navigate(\"/findPW\");\r\n    }\r\n\r\n    function onClickButton() {\r\n        if (!inputID) { inputIDRef.current.focus(); return;\r\n        } else if (!inputPW) {inputPWRef.current.focus(); return;\r\n        } else{\r\n        pw = userData.find((item) => String(item.id) === String(inputID));\r\n        if(String(inputPW) === String(pw.passWord)){\r\n            alert(\"로그인 되었습니다.\");\r\n            setIsLogin(pw.keyId);\r\n            navigate(\"/\");\r\n            } else{\r\n            alert(\"아이디/비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n            }\r\n        }   \r\n    }\r\n    */\r\n\r\n    return (\r\n        // <inputContext.Provider value={{inputID, inputPW, setID, setPW}}>\r\n            // <inputRefContext.Provider value={{inputIDRef, inputPWRef}}>\r\n        <>\r\n            <Form onSubmit = { AuthContext.loginUser }>\r\n                <Row style={{\r\n                    height: \"100vh\",\r\n                    justifyContent: \"Center\",\r\n                    paddingTop: \"10%\"\r\n                }}\r\n            >\r\n                    <Col xs={6}>\r\n                        <Stack gap={3}>\r\n                            \r\n                                <h2>Login</h2>\r\n                                    <Form.Control type=\"email\" placeholder=\"email\" onChange={(e) => updateLoginInfo ({ ...loginInfo, email: e.target.value})} />\r\n                                    <Form.Control type=\"password\" placeholder=\"password\" onChange={(e) => updateLoginInfo ({ ...loginInfo, password: e.target.value})} />\r\n                                    \r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        {isLoginLoading? \"Getting you in ... \" : \"Login\" }\r\n                                    </Button>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        {isFindID? \"... \" : \"Find ID\" }\r\n                                    </Button>\r\n\r\n                                    {loginError?.error && \r\n                                        <Alert variant=\"danger\"> \r\n                                            <p>\r\n                                                {loginError?.message}\r\n                                            </p>\r\n                                        </Alert>\r\n                                    }\r\n                            \r\n                        </Stack>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n            // </inputRefContext.Provider>\r\n        // </inputContext.Provider>\r\n    );\r\n};\r\nexport default Login;\r\n\r\nconsole.log(AuthContext)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}