{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uAC00\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\FinalProject\\\\moon2\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport UserInput from \"../component/UserInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useRef, useState, useContext } from \"react\";\nimport \"./Login.css\";\nimport { isLoginContext, userDataContext, setLoginContext } from \"../App\";\nimport Logo from \"../component/Logo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const inputContext = /*#__PURE__*/React.createContext();\nexport const inputRefContext = /*#__PURE__*/React.createContext();\nconst Login = () => {\n  _s();\n  // 로그인\n  const [inputID, setID] = useState(\"\"); // 입력받은 아이디를 저장하는 변수\n  const [inputPW, setPW] = useState(\"\"); // 입력받은 비밀번호를 저장하는 변수\n  const navigate = useNavigate();\n  const userData = useContext(userDataContext); // 저장된 user data\n  const isLogin = useContext(isLoginContext);\n  const {\n    setIsLogin\n  } = useContext(setLoginContext); // 로그인으로 상태 변경하는 함수\n  const inputIDRef = useRef();\n  const inputPWRef = useRef();\n  let pw = null; // 사용자 정보를 저장할 변수\n\n  const onClickFindID = () => {\n    // 아이디 찾기 버튼을 누른 경우\n    navigate(\"/findId\"); // Find ID 페이지로 이동\n  };\n  const onClickFindPW = () => {\n    // 비밀번호 찾기 버튼을 누른 경우\n    navigate(\"/findPW\"); // Find Passwoed 페이지로 이동\n  };\n  function onClickButton() {\n    // 로그인 버튼을 누른 경우 실행\n    if (!inputID) {\n      inputIDRef.current.focus();\n      return; // 입력이 없으면 하이라이트\n    } else if (!inputPW) {\n      inputPWRef.current.focus();\n      return;\n    } else {\n      pw = userData.find(item => String(item.id) === String(inputID)); // 입력받은 ID를 가진 사용자의 저장된 정보\n      if (String(inputPW) === String(pw.passWord)) {\n        // 저장된 비밀번호와 입력받은 비밀번호가 같은 경우\n        alert(\"로그인 되었습니다.\");\n        setIsLogin(pw.keyId); // 로그인 상태로 변경\n        navigate(\"/\"); // 홈으로 이동\n      } else {\n        // 저장된 비밀번호와 입력받은 비밀번호가 같지 않은 경우\n        alert(\"아이디/비밀번호가 일치하지 않습니다.\");\n        return;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(inputContext.Provider, {\n    value: {\n      inputID,\n      inputPW,\n      setID,\n      setPW\n    },\n    children: /*#__PURE__*/_jsxDEV(inputRefContext.Provider, {\n      value: {\n        inputIDRef,\n        inputPWRef\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Login\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Title\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LoginWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(UserInput, {\n            onClickButton: onClickButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: onClickButton,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Find\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"FindID\",\n            onClick: onClickFindID,\n            children: \"Find ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"FindPW\",\n            onClick: onClickFindPW,\n            children: \"Find PassWord\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"2MHAMZ5M1Li41t34pK1IEUa9jJU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["UserInput","useNavigate","React","useRef","useState","useContext","isLoginContext","userDataContext","setLoginContext","Logo","jsxDEV","_jsxDEV","inputContext","createContext","inputRefContext","Login","_s","inputID","setID","inputPW","setPW","navigate","userData","isLogin","setIsLogin","inputIDRef","inputPWRef","pw","onClickFindID","onClickFindPW","onClickButton","current","focus","find","item","String","id","passWord","alert","keyId","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/이가은/OneDrive/문서/GitHub/FinalProject/moon2/src/pages/Login.js"],"sourcesContent":["import UserInput from \"../component/UserInput\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport React, {useRef, useState, useContext} from \"react\";\r\nimport \"./Login.css\";\r\nimport {isLoginContext, userDataContext, setLoginContext} from \"../App\";\r\nimport Logo from \"../component/Logo\";\r\n\r\nexport const inputContext = React.createContext();\r\nexport const inputRefContext = React.createContext();\r\n\r\nconst Login = () => { // 로그인\r\n    const [inputID, setID] = useState(\"\"); // 입력받은 아이디를 저장하는 변수\r\n    const [inputPW, setPW] = useState(\"\"); // 입력받은 비밀번호를 저장하는 변수\r\n    const navigate = useNavigate();\r\n    const userData = useContext(userDataContext); // 저장된 user data\r\n    const isLogin = useContext(isLoginContext);\r\n    const {setIsLogin} = useContext(setLoginContext); // 로그인으로 상태 변경하는 함수\r\n    const inputIDRef = useRef();\r\n    const inputPWRef = useRef();\r\n    let pw = null; // 사용자 정보를 저장할 변수\r\n\r\n    const onClickFindID = () => { // 아이디 찾기 버튼을 누른 경우\r\n        navigate(\"/findId\"); // Find ID 페이지로 이동\r\n    }\r\n\r\n    const onClickFindPW = () => { // 비밀번호 찾기 버튼을 누른 경우\r\n        navigate(\"/findPW\"); // Find Passwoed 페이지로 이동\r\n    }\r\n\r\n    function onClickButton() { // 로그인 버튼을 누른 경우 실행\r\n        if (!inputID) { inputIDRef.current.focus(); return; // 입력이 없으면 하이라이트\r\n        } else if (!inputPW) {inputPWRef.current.focus(); return;\r\n        } else{\r\n        pw = userData.find((item) => String(item.id) === String(inputID)); // 입력받은 ID를 가진 사용자의 저장된 정보\r\n        if(String(inputPW) === String(pw.passWord)){ // 저장된 비밀번호와 입력받은 비밀번호가 같은 경우\r\n            alert(\"로그인 되었습니다.\");\r\n            setIsLogin(pw.keyId); // 로그인 상태로 변경\r\n            navigate(\"/\"); // 홈으로 이동\r\n            } else{ // 저장된 비밀번호와 입력받은 비밀번호가 같지 않은 경우\r\n            alert(\"아이디/비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <inputContext.Provider value={{inputID, inputPW, setID, setPW}}>\r\n            <inputRefContext.Provider value={{inputIDRef, inputPWRef}}>\r\n                <div className = \"Login\">\r\n                    <div className = \"logo\"><Logo /></div>\r\n                    <div className = \"Title\">로그인</div>\r\n                    <div className = \"LoginWrapper\">\r\n                        <UserInput onClickButton = {onClickButton} />\r\n                        <button className = \"button\" onClick = {onClickButton}>Log In</button>\r\n                    </div>\r\n                    <div className = \"Find\">\r\n                        <button className = \"FindID\" onClick = {onClickFindID}>Find ID</button>\r\n                        <button className = \"FindPW\" onClick = {onClickFindPW}>Find PassWord</button>\r\n                    </div>\r\n                </div>\r\n            </inputRefContext.Provider>\r\n        </inputContext.Provider>\r\n    );\r\n};\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}