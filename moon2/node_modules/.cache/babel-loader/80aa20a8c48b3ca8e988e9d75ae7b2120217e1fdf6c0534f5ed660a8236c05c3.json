{"ast":null,"code":"export const baseUrl = \"http://localhost:3000/api\";\nexport const postRequest = async (url, body) => {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    let message;\n    if (data !== null && data !== void 0 && data.message) {\n      message = data.message;\n    } else {\n      message = data;\n    }\n    return {\n      error: true,\n      message\n    };\n  }\n  return data;\n};\nexport const getRequest = async url => {\n  const response = await fetch(url);\n  const data = await response.json();\n  if (!response.ok) {\n    let message = \"An error occured...\";\n    if (data !== null && data !== void 0 && data.message) {\n      message = data.message;\n    }\n    return {\n      error: true,\n      message\n    };\n  }\n  return data;\n};","map":{"version":3,"names":["baseUrl","postRequest","url","body","response","fetch","method","headers","data","json","ok","message","error","getRequest"],"sources":["C:/Users/이가은/OneDrive/문서/GitHub/FinalProject/moon2/src/utils/services.js"],"sourcesContent":["export const baseUrl = \"http://localhost:3000/api\";\r\n\r\nexport const postRequest = async (url, body) => {\r\n\r\n    const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body,\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        let message;\r\n\r\n        if (data?.message) {\r\n            message = data.message;\r\n        } else {\r\n            message = data;\r\n        }\r\n        return { error: true, message };\r\n\r\n    }\r\n    return data;\r\n};\r\n\r\nexport const getRequest = async (url) => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        let message = \"An error occured...\";\r\n        if (data?.message) {\r\n            message = data.message;\r\n        }\r\n        return { error: true, message };\r\n    }\r\n\r\n    return data;\r\n\r\n};"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,2BAA2B;AAElD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,KAAK;EAE5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAC9BI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDJ;EACJ,CAAC,CAAC;EAEF,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;IACd,IAAIC,OAAO;IAEX,IAAIH,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,OAAO,EAAE;MACfA,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,CAAC,MAAM;MACHA,OAAO,GAAGH,IAAI;IAClB;IACA,OAAO;MAAEI,KAAK,EAAE,IAAI;MAAED;IAAQ,CAAC;EAEnC;EACA,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOX,GAAG,IAAK;EACrC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;EACjC,MAAMM,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAElC,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;IACd,IAAIC,OAAO,GAAG,qBAAqB;IACnC,IAAIH,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,OAAO,EAAE;MACfA,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B;IACA,OAAO;MAAEC,KAAK,EAAE,IAAI;MAAED;IAAQ,CAAC;EACnC;EAEA,OAAOH,IAAI;AAEf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}