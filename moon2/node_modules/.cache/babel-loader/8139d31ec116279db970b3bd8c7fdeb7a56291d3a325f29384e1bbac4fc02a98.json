{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uAC00\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\FinalProject\\\\moon2\\\\src\\\\component\\\\LikeButton.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { isLoginContext, likeItemContext, userDataContext } from \"../App\";\nimport \"./LikeButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikeButton = ({\n  itemID\n}) => {\n  _s();\n  // 좋아요 버튼\n  const {\n    likeItem,\n    cancelLikeItem\n  } = useContext(likeItemContext); // 좋아요 함수, 좋아요 취소 함수 받기\n  const isLogin = useContext(isLoginContext); // 로그인 여부와 로그인된 사용자의 keyId 확인\n  const userData = useContext(userDataContext); // 사용자 정보\n  const whoLogIn = userData.find(item => String(item.keyId) === String(isLogin[1])); // 로그인된 사용자 정보\n\n  if (String(isLogin[0]) === String(1)) {\n    // 로그인이 되어있는 경우\n    const likedItem = whoLogIn.likedItemId;\n    let isLike = likedItem.includes(itemID);\n    let color;\n    const likeButton = () => {\n      // 좋아요 버튼 클릭 시\n      if (!isLike) {\n        // '좋아요' 상태가 아닌 경우\n        likeItem(likedItem, itemID, isLogin[1]); // 좋아요 함수 실행\n        color = \"blue\";\n      } else {\n        // '좋아요' 상태인 경우\n        cancelLikeItem(likedItem, itemID, isLogin[1]); // 좋아요 취소 함수 실행\n        console.log(\"not like\");\n        color = \"gray\";\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LikeButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: color,\n        onClick: likeButton,\n        children: \"\\uC88B\\uC544\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(LikeButton, \"prHNBo4RW4bYRojMYJfGaj0MblQ=\");\n_c = LikeButton;\nexport default LikeButton;\nvar _c;\n$RefreshReg$(_c, \"LikeButton\");","map":{"version":3,"names":["useContext","isLoginContext","likeItemContext","userDataContext","jsxDEV","_jsxDEV","LikeButton","itemID","_s","likeItem","cancelLikeItem","isLogin","userData","whoLogIn","find","item","String","keyId","likedItem","likedItemId","isLike","includes","color","likeButton","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/이가은/OneDrive/문서/GitHub/FinalProject/moon2/src/component/LikeButton.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport {isLoginContext, likeItemContext, userDataContext} from \"../App\";\r\nimport \"./LikeButton.css\";\r\n\r\nconst LikeButton = ({itemID}) => { // 좋아요 버튼\r\n    const {likeItem, cancelLikeItem} = useContext(likeItemContext); // 좋아요 함수, 좋아요 취소 함수 받기\r\n    const isLogin = useContext(isLoginContext); // 로그인 여부와 로그인된 사용자의 keyId 확인\r\n    const userData = useContext(userDataContext); // 사용자 정보\r\n    const whoLogIn = userData.find((item) => String(item.keyId) === String(isLogin[1])); // 로그인된 사용자 정보\r\n\r\n    if(String(isLogin[0]) === String(1)){ // 로그인이 되어있는 경우\r\n        const likedItem = whoLogIn.likedItemId;\r\n        let isLike = likedItem.includes(itemID);\r\n        let color;\r\n\r\n        const likeButton = () => { // 좋아요 버튼 클릭 시\r\n            if (!isLike) { // '좋아요' 상태가 아닌 경우\r\n                likeItem(likedItem, itemID, isLogin[1]); // 좋아요 함수 실행\r\n                color = \"blue\";\r\n            }\r\n            else { // '좋아요' 상태인 경우\r\n                cancelLikeItem(likedItem, itemID, isLogin[1]); // 좋아요 취소 함수 실행\r\n                console.log(\"not like\");\r\n                color = \"gray\";\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"LikeButton\">\r\n                <button className = {color} onClick = {likeButton}>좋아요</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default LikeButton;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAAQC,cAAc,EAAEC,eAAe,EAAEC,eAAe,QAAO,QAAQ;AACvE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAAE;EAC/B,MAAM;IAACC,QAAQ;IAAEC;EAAc,CAAC,GAAGV,UAAU,CAACE,eAAe,CAAC,CAAC,CAAC;EAChE,MAAMS,OAAO,GAAGX,UAAU,CAACC,cAAc,CAAC,CAAC,CAAC;EAC5C,MAAMW,QAAQ,GAAGZ,UAAU,CAACG,eAAe,CAAC,CAAC,CAAC;EAC9C,MAAMU,QAAQ,GAAGD,QAAQ,CAACE,IAAI,CAAEC,IAAI,IAAKC,MAAM,CAACD,IAAI,CAACE,KAAK,CAAC,KAAKD,MAAM,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErF,IAAGK,MAAM,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC,KAAKK,MAAM,CAAC,CAAC,CAAC,EAAC;IAAE;IAClC,MAAME,SAAS,GAAGL,QAAQ,CAACM,WAAW;IACtC,IAAIC,MAAM,GAAGF,SAAS,CAACG,QAAQ,CAACd,MAAM,CAAC;IACvC,IAAIe,KAAK;IAET,MAAMC,UAAU,GAAGA,CAAA,KAAM;MAAE;MACvB,IAAI,CAACH,MAAM,EAAE;QAAE;QACXX,QAAQ,CAACS,SAAS,EAAEX,MAAM,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzCW,KAAK,GAAG,MAAM;MAClB,CAAC,MACI;QAAE;QACHZ,cAAc,CAACQ,SAAS,EAAEX,MAAM,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/Ca,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvBH,KAAK,GAAG,MAAM;MAClB;IACJ,CAAC;IAED,oBACIjB,OAAA;MAAKqB,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvBtB,OAAA;QAAQqB,SAAS,EAAIJ,KAAM;QAACM,OAAO,EAAIL,UAAW;QAAAI,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAEd;AACJ,CAAC;AAACxB,EAAA,CA7BIF,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}