{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uAC00\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\FinalProject\\\\moon2\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport UserInput from \"../component/UserInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useContext } from \"react\";\n// import \"./Login.css\";\nimport { isLoginContext, userDataContext, setLoginContext } from \"../App\";\n// import Logo from \"../component/Logo\";\nimport { Alert, Button, Form, Row, Col, Stack } from \"react-bootstrap\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const inputContext = /*#__PURE__*/React.createContext();\nexport const inputRefContext = /*#__PURE__*/React.createContext();\nconst Login = () => {\n  _s();\n  const {\n    loginUser,\n    loginError,\n    loginInfo,\n    updateLoginInfo,\n    isLoginLoading\n  } = useContext(AuthContext) || {};\n  const [inputID, setID] = useState(\"\"); // 입력받은 아이디를 저장하는 변수\n  const [inputPW, setPW] = useState(\"\"); // 입력받은 비밀번호를 저장하는 변수\n  const navigate = useNavigate();\n  const userData = useContext(userDataContext); // 저장된 user data\n  const isLogin = useContext(isLoginContext);\n  const {\n    setIsLogin\n  } = useContext(setLoginContext); // 로그인으로 상태 변경하는 함수\n  const inputIDRef = useRef();\n  const inputPWRef = useRef();\n  let pw = null; // 사용자 정보를 저장할 변수\n\n  const onClickFindID = () => {\n    // 아이디 찾기 버튼을 누른 경우\n    navigate(\"/findId\"); // Find ID 페이지로 이동\n  };\n  const onClickFindPW = () => {\n    // 비밀번호 찾기 버튼을 누른 경우\n    navigate(\"/findPW\"); // Find Passwoed 페이지로 이동\n  };\n  function onClickButton() {\n    // 로그인 버튼을 누른 경우 실행\n    if (!inputID) {\n      inputIDRef.current.focus();\n      return; // 입력이 없으면 하이라이트\n    } else if (!inputPW) {\n      inputPWRef.current.focus();\n      return;\n    } else {\n      pw = userData.find(item => String(item.id) === String(inputID)); // 입력받은 ID를 가진 사용자의 저장된 정보\n      if (String(inputPW) === String(pw.passWord)) {\n        // 저장된 비밀번호와 입력받은 비밀번호가 같은 경우\n        alert(\"로그인 되었습니다.\");\n        setIsLogin(pw.keyId); // 로그인 상태로 변경\n        navigate(\"/\"); // 홈으로 이동\n      } else {\n        // 저장된 비밀번호와 입력받은 비밀번호가 같지 않은 경우\n        alert(\"아이디/비밀번호가 일치하지 않습니다.\");\n        return;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(inputContext.Provider, {\n    value: {\n      inputID,\n      inputPW,\n      setID,\n      setPW\n    },\n    children: /*#__PURE__*/_jsxDEV(inputRefContext.Provider, {\n      value: {\n        inputIDRef,\n        inputPWRef\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: loginUser,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            height: \"100vh\",\n            justifyContent: \"Center\",\n            paddingTop: \"10%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              gap: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Email\",\n                onChange: e => updateLoginInfo({\n                  ...loginInfo,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                onChange: e => updateLoginInfo({\n                  ...loginInfo,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: isLoginLoading ? \"Getting you in ... \" : \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), (loginError === null || loginError === void 0 ? void 0 : loginError.error) && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: loginError === null || loginError === void 0 ? void 0 : loginError.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"RvLpIALr4C4uWAPp7by8KuMFpPE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["UserInput","useNavigate","React","useContext","isLoginContext","userDataContext","setLoginContext","Alert","Button","Form","Row","Col","Stack","AuthContext","jsxDEV","_jsxDEV","inputContext","createContext","inputRefContext","Login","_s","loginUser","loginError","loginInfo","updateLoginInfo","isLoginLoading","inputID","setID","useState","inputPW","setPW","navigate","userData","isLogin","setIsLogin","inputIDRef","useRef","inputPWRef","pw","onClickFindID","onClickFindPW","onClickButton","current","focus","find","item","String","id","passWord","alert","keyId","Provider","value","children","onSubmit","style","height","justifyContent","paddingTop","xs","gap","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","e","email","target","password","variant","error","message","_c","$RefreshReg$"],"sources":["C:/Users/이가은/OneDrive/문서/GitHub/FinalProject/moon2/src/pages/Login.js"],"sourcesContent":["import UserInput from \"../component/UserInput\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport React, {useContext} from \"react\";\r\n// import \"./Login.css\";\r\nimport {isLoginContext, userDataContext, setLoginContext} from \"../App\";\r\n// import Logo from \"../component/Logo\";\r\nimport { Alert, Button, Form, Row, Col, Stack } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const inputContext = React.createContext();\r\nexport const inputRefContext = React.createContext();\r\n\r\nconst Login = () => {\r\n    const {\r\n        loginUser,\r\n        loginError,\r\n        loginInfo,\r\n        updateLoginInfo,\r\n        isLoginLoading,\r\n    } = useContext(AuthContext) || {};\r\n\r\n    const [inputID, setID] = useState(\"\"); // 입력받은 아이디를 저장하는 변수\r\n    const [inputPW, setPW] = useState(\"\"); // 입력받은 비밀번호를 저장하는 변수\r\n    const navigate = useNavigate();\r\n    const userData = useContext(userDataContext); // 저장된 user data\r\n    const isLogin = useContext(isLoginContext);\r\n    const {setIsLogin} = useContext(setLoginContext); // 로그인으로 상태 변경하는 함수\r\n    const inputIDRef = useRef();\r\n    const inputPWRef = useRef();\r\n    let pw = null; // 사용자 정보를 저장할 변수\r\n\r\n    const onClickFindID = () => { // 아이디 찾기 버튼을 누른 경우\r\n        navigate(\"/findId\"); // Find ID 페이지로 이동\r\n    }\r\n\r\n    const onClickFindPW = () => { // 비밀번호 찾기 버튼을 누른 경우\r\n        navigate(\"/findPW\"); // Find Passwoed 페이지로 이동\r\n    }\r\n\r\n    function onClickButton() { // 로그인 버튼을 누른 경우 실행\r\n        if (!inputID) { inputIDRef.current.focus(); return; // 입력이 없으면 하이라이트\r\n        } else if (!inputPW) {inputPWRef.current.focus(); return;\r\n        } else{\r\n        pw = userData.find((item) => String(item.id) === String(inputID)); // 입력받은 ID를 가진 사용자의 저장된 정보\r\n        if(String(inputPW) === String(pw.passWord)){ // 저장된 비밀번호와 입력받은 비밀번호가 같은 경우\r\n            alert(\"로그인 되었습니다.\");\r\n            setIsLogin(pw.keyId); // 로그인 상태로 변경\r\n            navigate(\"/\"); // 홈으로 이동\r\n            } else{ // 저장된 비밀번호와 입력받은 비밀번호가 같지 않은 경우\r\n            alert(\"아이디/비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <inputContext.Provider value={{inputID, inputPW, setID, setPW}}>\r\n            <inputRefContext.Provider value={{inputIDRef, inputPWRef}}>\r\n                <Form onSubmit ={loginUser}>\r\n                    <Row style={{\r\n                        height: \"100vh\",\r\n                        justifyContent: \"Center\",\r\n                        paddingTop: \"10%\"\r\n                    }}>\r\n                        <Col xs={6}>\r\n                            <Stack gap={3}>\r\n                                <h2>Login</h2>\r\n\r\n                                <Form.Control type=\"email\" placeholder=\"Email\" onChange={(e) => updateLoginInfo\r\n                                    ({ ...loginInfo, email: e.target.value })} />\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => updateLoginInfo\r\n                                    ({ ...loginInfo, password: e.target.value })}/>\r\n\r\n                                <Button variant=\"primary\" type=\"submit\" >\r\n                                    {isLoginLoading? \"Getting you in ... \" : \"Login\"}\r\n                                </Button>\r\n                                {loginError?.error && \r\n                                <Alert variant=\"danger\">\r\n                                    <p>{loginError?.message}</p></Alert>} \r\n                            </Stack>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </inputRefContext.Provider>\r\n        </inputContext.Provider>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}